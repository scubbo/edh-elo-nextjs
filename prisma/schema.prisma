// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id    Int    @id @default(autoincrement())
  name  String
  decks Deck[]
}

model Deck {
  id          Int    @id @default(autoincrement())
  name        String
  owner       Player @relation(fields: [ownerId], references: [id])
  ownerId     Int

  scores EloScore[] @relation("DeckScores", fields: [])

  @@index([ownerId])
}

model WinType {
  id   Int    @id @default(autoincrement())
  name String
  games Game[] @relation("WinTypeGames")
}

model Format {
  id   Int    @id @default(autoincrement())
  name String
  games Game[] @relation("FormatGames")
}

model Game {
  id                Int      @id @default(autoincrement())
  date              DateTime
  deckIds           Int[]
  winningDeckIds    Int[]
  numberOfTurns     Int
  firstPlayerOutTurn Int
  winTypeId         Int
  formatId          Int
  description       String

  winType           WinType @relation("WinTypeGames", fields: [winTypeId], references: [id])
  format            Format  @relation("FormatGames", fields: [formatId], references: [id])
  scores            EloScore[] @relation("GameScores")
}

model EloScore {
  id      Int      @id @default(autoincrement())
  date    DateTime
  score   Int
  deckId  Int
  gameId  Int

  deck    Deck     @relation("DeckScores", fields: [deckId], references: [id])
  game    Game     @relation("GameScores", fields: [gameId], references: [id])

  @@index([deckId])
  @@index([gameId])
}
